//-----------------------------------------------------------------------------
//	AVI_BASE.VPC
//
//	Controls selection (and compilation) of various video subsystems 
//
//  Defines to add or remove to the preprocessor definitions:
//
//  AVI_VIDEO        - controls availability of IAvi interface, playing of AVI Video files in Engine
//  BINK_VIDEO	     - controls availability of IBik interface
//  QUICKTIME_VIDEO  - controls availability of IQuickTime interface
//  WMV_VIDEO        - controls availability of playing WMV MPEG video files in Engine
//
//  FORCE_QUICKTIME  - causes engine to force change ".bik" ".wmv" ".avi" extensions to ".mov" and 
//                     look for Quicktime playback *IF* the same file exists in .mov form
//                          
//-----------------------------------------------------------------------------


// We use Quicktime exclusively (and only quicktime) on the Mac
//
// We have two configurations for Win32. 
// 
// 1) Comment out the following $macro line out to enable BINK (and AVI and WMV) playback of videos
// 2) Uncomment the following $macro line out to enable Quicktime (and AVI and WMV) playback of videos and
//     - the Quicktime file override ( the Quicktime .mov is played if present even if a .bnk, .avi or .wmv file was specified )

$Conditional GL "1" [!$DEDICATED && !$WIN32 && !$WIN64]
// If we're using OpenGL, we're implicitly using SDL.
$Macro SDL "1" [$GL && !$DEDICATED]

$Configuration
{
	$Compiler
	{
		$PreprocessorDefinitions		"$BASE;QUICKTIME_VIDEO;FORCE_QUICKTIME"		[$OSXALL]

		// dimhotepus: Drop Quicktime on Windows as Apple not support it (no x64 for example)

		$PreprocessorDefinitions		"$BASE;BINK_VIDEO;AVI_VIDEO;WMV_VIDEO"		[$WINDOWS]
		$PreprocessorDefinitions		"$BASE;BINK_VIDEO"							[$LINUXALL]
		
		$PreprocessorDefinitions		"$BASE;GL_GLEXT_PROTOTYPES;DX_TO_GL_ABSTRACTION"			[$GL]
		$PreprocessorDefinitions		"$BASE;USE_SDL"										[$SDL]
		$AdditionalIncludeDirectories		"$BASE;$SRCDIR\thirdparty\SDL"					[$SDL || $DEDICATED]
	}

	$PostBuildEvent [!$ANALYZE && $SDL]
	{
		$CommandLine		"IF NOT EXIST $QUOTE$OUTBINDIR$QUOTE MKDIR $QUOTE$OUTBINDIR$QUOTE" "\n" \
							"COPY $SDL3OUTDIR\SDL3.dll $OUTBINDIR\SDL3.dll" "\n"					\
							"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							"IF EXIST $SDL3OUTDIR\SDL3.pdb COPY $SDL3OUTDIR\SDL3.pdb $OUTBINDIR\SDL3.pdb" "\n"					\
							"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							"$BASE"
	}
}
