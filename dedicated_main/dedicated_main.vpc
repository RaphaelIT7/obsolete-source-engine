//-----------------------------------------------------------------------------
//	DEDICATED_MAIN.VPC
//
//	Project Script
//-----------------------------------------------------------------------------

$Macro SRCDIR		".."
$Macro OUTBINDIR	"$SRCDIR\..\game"
$Macro OUTBINDIRX64	"$SRCDIR\..\game"
$Macro OUTBINNAME	"srcds" [$WIN32]
$Macro OUTBINNAME	"srcds_win64" [$WIN64]
$Macro OUTBINNAME	"srcds_osx" [$OSXALL]
$Macro OUTBINNAME	"srcds_linux" [$LINUXALL]

$Include "$SRCDIR\vpc_scripts\source_exe_base.vpc"
$Include "$SRCDIR\tier0\tier0_exclude.vpc"
$Include "$SRCDIR\tier1\tier1_exclude.vpc" [$WINDOWS]
$Include "$SRCDIR\vstdlib\vstdlib_exclude.vpc" [$WINDOWS]

$Configuration
{
	$Linker [$WINDOWS]
	{
		$AdditionalDependencies				"$BASE Advapi32.lib User32.lib"
	}

	$ManifestTool
	{
		// Input And Output
		$AdditionalManifestFiles			"$BASE;$SRCDIR\build\win\manifests\dpi-aware.manifest;$SRCDIR\build\win\manifests\ultra-high-scroll-resolution.manifest;$SRCDIR\build\win\manifests\utf-8-code-page.manifest;$SRCDIR\out\manifests\enable-visual-styles.manifest" [!$SOURCESDK]
	}
	
	$Resources
	{
		// General
		$PreprocessorDefinitions				"$BASE;SRC_PRODUCT_INTERNAL_NAME_STRING=\$QUOTEsrcds\$QUOTE;SRC_PRODUCT_ORIGINAL_NAME_STRING=\$QUOTEsrcds.exe\$QUOTE"
	}

	$PostBuildEvent	[$WIN32 && !$ANALYZE]
	{
		$CommandLine				"IF NOT EXIST $OUTBINDIR MKDIR $OUTBINDIR" "\n"				\
									"COPY $(TargetPath) $OUTBINDIR\$OUTBINNAME.exe" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"COPY $(IntDir)\$OUTBINNAME.pdb $OUTBINDIR\$OUTBINNAME.pdb" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"IF EXIST $(TargetDir)$(TargetName).map COPY $(TargetDir)$(TargetName).map $OUTBINDIR\$OUTBINNAME.map" "\n" \
									"$OUTBINDIR\bin\newdat $OUTBINDIR\$OUTBINNAME.exe" "\n"					\
									"GOTO BuildEventOK" "\n" \
									":BuildEventFailed" "\n" \
									"ECHO *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
									"DEL /Q $(TargetPath)" "\n" \
									"EXIT 1" "\n" \
									":BuildEventOK" "\n"
	}

	$PostBuildEvent	[$WIN64 && !$ANALYZE]
	{
		$CommandLine				"IF NOT EXIST $OUTBINDIRX64 MKDIR $OUTBINDIRX64" "\n"				\
									"COPY $(TargetPath) $OUTBINDIRX64\$OUTBINNAME.exe" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"COPY $(IntDir)\$OUTBINNAME.pdb $OUTBINDIRX64\$OUTBINNAME.pdb" "\n"					\
									"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
									"IF EXIST $(TargetDir)$(TargetName).map COPY $(TargetDir)$(TargetName).map $OUTBINDIRX64\$OUTBINNAME.map" "\n" \
									"$OUTBINDIRX64\bin\x64\newdat $OUTBINDIRX64\$OUTBINNAME.exe" "\n"					\
									"GOTO BuildEventOK" "\n" \
									":BuildEventFailed" "\n" \
									"ECHO *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
									"DEL /Q $(TargetPath)" "\n" \
									"EXIT 1" "\n" \
									":BuildEventOK" "\n"
	}
}

$Project "Dedicated_main"
{
	$Folder	"Source Files"
	{
		$File	"main_win.cpp" [$WINDOWS]
		$File	"main_posix.cpp" [$OSXALL || $LINUXALL]
		$File	"$SRCDIR\common\SteamAppStartup.cpp"
		$File	"$SRCDIR\common\SteamAppStartup.h"
	}

	$Folder	"Resources"
	{
		$File	"resources\app.ico"
		$File	"$SRCDIR\out\manifests\enable-visual-styles.manifest"
		$File	"$SRCDIR\build\win\resource_scripts\windows_app_base.rc"
	}

	$Folder	"Link Libraries" 
	{
		-$Lib tier0 [$WINDOWS]
	}
}
